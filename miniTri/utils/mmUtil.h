//////////////////////////////////////////////////////////////////////////////
//                                                                          //
// File:      util.h                                                        //
// Project:   miniTri                                                       //
// Author:    Michael Wolf                                                  //
//                                                                          //
// Description:                                                             //
//              Header file for utilities.                                  //
//////////////////////////////////////////////////////////////////////////////
#ifndef SUTIL_H
#define SUTIL_H

#include <fstream>
#include <iostream>

#include "mmio.h"

#include "miniTriDefs.h"

//////////////////////////////////////////////////////////////////////////////
// Writes the matrix market banner to a file
//////////////////////////////////////////////////////////////////////////////
void writeMMBanner(std::ofstream &ofs, int m, int n, int nnz);
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
void buildEdgeListFromMM(const char *fname, int &numVerts, int &numEdges, 
			 std::vector<edge_t> &edgeList);
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
void buildDistEdgeListFromMM(const char *fname, int worldsize, int myrank,
			     int &numGlobVerts, int &numLocVerts, int &startVert, 
			     std::vector<edge_t> &edgeList);
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
void partitionMatrix(int gNumRows,int P, int rank, int &locNumRows,
                     int &startrow);
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
void checkMatrixType(const MM_typecode &matcode);
//////////////////////////////////////////////////////////////////////////////







#endif
